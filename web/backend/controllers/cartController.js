const Cart = require("../models/Cart");

// üìå L·∫•y gi·ªè h√†ng
exports.getCart = async (req, res) => {
  try {
    const cart = await Cart.findOne({ userId: req.query.userId }).populate("items.productId");
    res.json(cart ? cart.items : []);
  } catch (error) {
    res.status(500).json({ message: "L·ªói server!", error });
  }
};

// üìå Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
exports.addToCart = async (req, res) => {
  try {
    const { userId, productId, quantity } = req.body;

    let cart = await Cart.findOne({ userId });

    if (!cart) {
      cart = new Cart({ userId, items: [] });
    }

    // Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i trong gi·ªè ch∆∞a
    const existingItem = cart.items.find((item) => item.productId.toString() === productId);

    if (existingItem) {
      existingItem.quantity += quantity;
    } else {
      cart.items.push({ productId, quantity });
    }

    await cart.save();
    res.json({ message: "Th√™m v√†o gi·ªè h√†ng th√†nh c√¥ng!", items: cart.items });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi th√™m s·∫£n ph·∫©m!", error });
  }
};

// üìå C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
exports.updateCart = async (req, res) => {
  try {
    const { userId, itemId, quantity } = req.body;

    const cart = await Cart.findOne({ userId });
    if (!cart) return res.status(404).json({ message: "Gi·ªè h√†ng kh√¥ng t·ªìn t·∫°i!" });

    const item = cart.items.find((item) => item._id.toString() === itemId);
    if (item) {
      item.quantity = quantity;
    } else {
      return res.status(404).json({ message: "S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i trong gi·ªè h√†ng!" });
    }

    await cart.save();
    res.json({ items: cart.items });
  } catch (error) {
    res.status(500).json({ message: "L·ªói c·∫≠p nh·∫≠t gi·ªè h√†ng!", error });
  }
};

// üìå X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
exports.removeFromCart = async (req, res) => {
  try {
    const { userId, itemId } = req.body;

    const cart = await Cart.findOne({ userId });
    if (!cart) return res.status(404).json({ message: "Gi·ªè h√†ng kh√¥ng t·ªìn t·∫°i!" });

    cart.items = cart.items.filter((item) => item._id.toString() !== itemId);

    await cart.save();
    res.json({ items: cart.items });
  } catch (error) {
    res.status(500).json({ message: "L·ªói x√≥a s·∫£n ph·∫©m!", error });
  }
};

// üìå X√≥a to√†n b·ªô gi·ªè h√†ng
exports.clearCart = async (req, res) => {
  try {
    const { userId } = req.body;

    const cart = await Cart.findOne({ userId });
    if (!cart) return res.status(404).json({ message: "Gi·ªè h√†ng kh√¥ng t·ªìn t·∫°i!" });

    cart.items = []; // X√≥a to√†n b·ªô s·∫£n ph·∫©m
    await cart.save();

    res.json({ message: "Gi·ªè h√†ng ƒë√£ ƒë∆∞·ª£c l√†m tr·ªëng!", items: [] });
  } catch (error) {
    res.status(500).json({ message: "L·ªói khi x√≥a gi·ªè h√†ng!", error });
  }
};
